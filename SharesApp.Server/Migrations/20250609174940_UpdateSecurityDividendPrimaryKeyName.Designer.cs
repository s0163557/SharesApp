// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SharesApp.Server.Models;

#nullable disable

namespace SharesApp.Server.Migrations
{
    [DbContext(typeof(SecuritiesContext))]
    [Migration("20250609174940_UpdateSecurityDividendPrimaryKeyName")]
    partial class UpdateSecurityDividendPrimaryKeyName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharesApp.Server.Models.Inflation", b =>
                {
                    b.Property<int>("InflationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("inflation_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InflationId"));

                    b.Property<DateOnly>("DateOfRecord")
                        .HasColumnType("date")
                        .HasColumnName("date_of_record");

                    b.Property<decimal>("InflationValue")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("inflation_value");

                    b.Property<decimal?>("KeyRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("key_rate");

                    b.HasKey("InflationId")
                        .HasName("inflations_pkey");

                    b.ToTable("inflations", (string)null);
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityDividend", b =>
                {
                    b.Property<int>("SecurityDividendId")
                        .HasColumnType("integer")
                        .HasColumnName("security_dividends_id");

                    b.Property<DateOnly>("DateOfPayment")
                        .HasColumnType("date")
                        .HasColumnName("date_of_payment");

                    b.Property<double>("Dividend")
                        .HasColumnType("double precision")
                        .HasColumnName("dividend");

                    b.Property<decimal?>("Income")
                        .HasPrecision(3, 2)
                        .HasColumnType("numeric(3,2)")
                        .HasColumnName("income");

                    b.Property<DateOnly?>("Period")
                        .HasColumnType("date")
                        .HasColumnName("period");

                    b.Property<DateOnly?>("Registry")
                        .HasColumnType("date")
                        .HasColumnName("registry");

                    b.Property<int>("SecurityInfoId")
                        .HasColumnType("integer")
                        .HasColumnName("security_info_id");

                    b.HasKey("SecurityDividendId")
                        .HasName("security_dividend_pkey");

                    b.HasIndex("SecurityInfoId");

                    b.ToTable("security_dividends", (string)null);
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityInfo", b =>
                {
                    b.Property<int>("SecurityInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("security_info_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SecurityInfoId"));

                    b.Property<string>("Isin")
                        .HasColumnType("text")
                        .HasColumnName("isin");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("issue_date");

                    b.Property<long>("IssueSize")
                        .HasColumnType("bigint")
                        .HasColumnName("issue_size");

                    b.Property<int>("ListLevel")
                        .HasColumnType("integer")
                        .HasColumnName("list_level");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("SecurityId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("security_id");

                    b.HasKey("SecurityInfoId");

                    b.ToTable("security_infos", (string)null);
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityTradeRecord", b =>
                {
                    b.Property<int>("SecurityTradeRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("security_trade_record_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SecurityTradeRecordId"));

                    b.Property<double>("Close")
                        .HasColumnType("double precision")
                        .HasColumnName("close");

                    b.Property<DateOnly>("DateOfTrade")
                        .HasColumnType("date")
                        .HasColumnName("date_of_trade");

                    b.Property<double>("High")
                        .HasColumnType("double precision")
                        .HasColumnName("high");

                    b.Property<double>("Low")
                        .HasColumnType("double precision")
                        .HasColumnName("low");

                    b.Property<int>("NumberOfTrades")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_trades");

                    b.Property<double>("Open")
                        .HasColumnType("double precision")
                        .HasColumnName("open");

                    b.Property<int>("SecurityInfoId")
                        .HasColumnType("integer")
                        .HasColumnName("security_info_id");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("SecurityTradeRecordId");

                    b.HasIndex(new[] { "SecurityInfoId" }, "IX_security_trade_records_security_info_id");

                    b.ToTable("security_trade_records", (string)null);
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityTradeRecordsByMonth", b =>
                {
                    b.Property<int>("SecurityTradeRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("security_trade_record_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SecurityTradeRecordId"));

                    b.Property<double>("Close")
                        .HasColumnType("double precision")
                        .HasColumnName("close");

                    b.Property<DateOnly>("DateOfTrade")
                        .HasColumnType("date")
                        .HasColumnName("date_of_trade");

                    b.Property<double>("High")
                        .HasColumnType("double precision")
                        .HasColumnName("high");

                    b.Property<double>("Low")
                        .HasColumnType("double precision")
                        .HasColumnName("low");

                    b.Property<int>("NumberOfTrades")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_trades");

                    b.Property<double>("Open")
                        .HasColumnType("double precision")
                        .HasColumnName("open");

                    b.Property<int>("SecurityInfoId")
                        .HasColumnType("integer")
                        .HasColumnName("security_info_id");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("SecurityTradeRecordId");

                    b.HasIndex(new[] { "SecurityInfoId" }, "IX_security_trade_records_by_month_security_info_id");

                    b.ToTable("security_trade_records_by_month", (string)null);
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityTradeRecordsByWeek", b =>
                {
                    b.Property<int>("SecurityTradeRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("security_trade_record_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SecurityTradeRecordId"));

                    b.Property<double>("Close")
                        .HasColumnType("double precision")
                        .HasColumnName("close");

                    b.Property<DateOnly>("DateOfTrade")
                        .HasColumnType("date")
                        .HasColumnName("date_of_trade");

                    b.Property<double>("High")
                        .HasColumnType("double precision")
                        .HasColumnName("high");

                    b.Property<double>("Low")
                        .HasColumnType("double precision")
                        .HasColumnName("low");

                    b.Property<int>("NumberOfTrades")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_trades");

                    b.Property<double>("Open")
                        .HasColumnType("double precision")
                        .HasColumnName("open");

                    b.Property<int>("SecurityInfoId")
                        .HasColumnType("integer")
                        .HasColumnName("security_info_id");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("SecurityTradeRecordId");

                    b.HasIndex(new[] { "SecurityInfoId" }, "IX_security_trade_records_by_week_security_info_id");

                    b.ToTable("security_trade_records_by_week", (string)null);
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityDividend", b =>
                {
                    b.HasOne("SharesApp.Server.Models.SecurityInfo", "SecurityInfo")
                        .WithMany("SecurityDividends")
                        .HasForeignKey("SecurityInfoId")
                        .IsRequired();

                    b.Navigation("SecurityInfo");
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityTradeRecord", b =>
                {
                    b.HasOne("SharesApp.Server.Models.SecurityInfo", "SecurityInfo")
                        .WithMany("SecurityTradeRecords")
                        .HasForeignKey("SecurityInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SecurityInfo");
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityTradeRecordsByMonth", b =>
                {
                    b.HasOne("SharesApp.Server.Models.SecurityInfo", "SecurityInfo")
                        .WithMany("SecurityTradeRecordsByMonths")
                        .HasForeignKey("SecurityInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_security_trade_records_by_month_security_infos_security_inf~");

                    b.Navigation("SecurityInfo");
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityTradeRecordsByWeek", b =>
                {
                    b.HasOne("SharesApp.Server.Models.SecurityInfo", "SecurityInfo")
                        .WithMany("SecurityTradeRecordsByWeeks")
                        .HasForeignKey("SecurityInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_security_trade_records_by_week_security_infos_security_info~");

                    b.Navigation("SecurityInfo");
                });

            modelBuilder.Entity("SharesApp.Server.Models.SecurityInfo", b =>
                {
                    b.Navigation("SecurityDividends");

                    b.Navigation("SecurityTradeRecords");

                    b.Navigation("SecurityTradeRecordsByMonths");

                    b.Navigation("SecurityTradeRecordsByWeeks");
                });
#pragma warning restore 612, 618
        }
    }
}
